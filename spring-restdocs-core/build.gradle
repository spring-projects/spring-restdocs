import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
	id 'org.springframework.restdocs.conventions'
	id "java-library"
	id "java-test-fixtures"
	id "maven-publish"
	id "org.springframework.restdocs.optional-dependencies"
	id "com.gradleup.shadow" version "8.3.8" apply false
}

description = "Spring REST Docs Core"

configurations {
	jmustache
	testArtifacts.extendsFrom testRuntime
}

def jmustacheShadowJar = tasks.register("jmustacheShadowJar", ShadowJar) {
	archiveBaseName = "restdocs-jmustache"
	archiveVersion = jmustacheVersion
	configurations = [ project.configurations.jmustache ]
	include("*.jar")
	include("com/samskivert/**/*.class")
	relocate("com.samskivert", "org.springframework.restdocs")
}

dependencies {
	compileOnly("org.apiguardian:apiguardian-api")

	implementation("tools.jackson.core:jackson-databind")
	implementation("org.springframework:spring-web")
	implementation(files(jmustacheShadowJar))

	jmustache(platform(project(":spring-restdocs-platform")))
	jmustache("com.samskivert:jmustache@jar")

	optional(platform(project(":spring-restdocs-platform")))
	optional("jakarta.validation:jakarta.validation-api")
	optional("org.hibernate.validator:hibernate-validator")
	optional("org.junit.jupiter:junit-jupiter-api")

	testFixturesApi(platform(project(":spring-restdocs-platform")))
	testFixturesApi("org.assertj:assertj-core")
	testFixturesApi("org.junit.jupiter:junit-jupiter")
	testFixturesApi("org.mockito:mockito-core")

	testFixturesCompileOnly("org.apiguardian:apiguardian-api")

	testFixturesImplementation(files(jmustacheShadowJar))
	testFixturesImplementation("org.hamcrest:hamcrest-library")
	testFixturesImplementation("org.mockito:mockito-core")
	testFixturesImplementation("org.springframework:spring-core")
	testFixturesImplementation("org.springframework:spring-web")

	testFixturesRuntimeOnly("org.junit.platform:junit-platform-launcher")

	testCompileOnly("org.apiguardian:apiguardian-api")

	testImplementation("org.assertj:assertj-core")
	testImplementation("org.javamoney:moneta")
	testImplementation("org.mockito:mockito-core")
	testImplementation("org.springframework:spring-test")
	testImplementation 'net.sf.saxon:Saxon-HE:12.8'

	testRuntimeOnly("org.apache.tomcat.embed:tomcat-embed-el")
	testRuntimeOnly("org.junit.platform:junit-platform-engine")
}

tasks.named("jar") {
	dependsOn jmustacheShadowJar
	from(zipTree(jmustacheShadowJar.map { it.archiveFile } )) {
		include "org/springframework/restdocs/**"
	}
}
